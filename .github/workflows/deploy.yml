name: Deploy

on:
  push:
    branches:
      - master

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Set themes matrix
      id: set-matrix
      run: |
        themes_json=`cat ./packages/metadata/themes.json`
        themes_json="${themes_json//$'\n'/''}"
        themes_json="${themes_json//$'\r'/''}"
        themes_json="${themes_json//$' '/''}"
        echo "::set-output name=matrix::$themes_json"
  build:
    needs: set-matrix
    name: Build applications
    runs-on: ubuntu-latest
    env:
      CI: false
    strategy:
      matrix:
        theme: ${{fromJson(needs.set-matrix.outputs.matrix)}}
        mode: [ default, embedded ]

    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Set NPM version
      run: npm i npm@7 -g

    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Run npm install
      run: npm install

    - name: Set theme
      run: npm run set-theme -- ${{ matrix.theme }}

    - name: Set mode
      if: ${{ matrix.mode == 'embedded' }}
      run: npm run make-embedded-mode

    - name: Build
      run: npm run build

    - name: Copy apps
      run: npm run copy-build -- ${{ matrix.mode }} ${{ matrix.theme }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: devextreme-ui-template-gallery/

  build-shell:
    name: Build shell
    runs-on: ubuntu-latest

    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Set NPM version
      run: npm i npm@7 -g

    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Run npm install
      run: npm install

    - name: Run npm install for shell
      run: npm install
      working-directory: packages/shell

    - name: Build Shell
      run: npm run build-shell
      working-directory: packages/shell

    - name: Copy apps
      run: npm run copy-shell

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: devextreme-ui-template-gallery/

  deploy:
    name: Deploy
    needs: [build, build-shell]
    runs-on: ubuntu-latest

    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: devextreme-ui-template-gallery

    - name: Deploy in gh-pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        BRANCH: gh-pages
        FOLDER: devextreme-ui-template-gallery
        TARGET_FOLDER: .

