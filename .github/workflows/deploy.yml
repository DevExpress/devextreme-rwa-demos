name: Deploy

on:
  workflow_dispatch:

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Get sources
      uses: actions/checkout@v3

    - name: Set themes matrix
      id: set-matrix
      run: |
        themes_json=`echo '["fluent.blue.light.compact"]'`
        themes_json="${themes_json//$'\n'/''}"
        themes_json="${themes_json//$'\r'/''}"
        themes_json="${themes_json//$' '/''}"
        echo "matrix=$themes_json" >> $GITHUB_OUTPUT
  build:
    needs: set-matrix
    name: Build applications
    runs-on: ubuntu-latest
    env:
      CI: false
    strategy:
      matrix:
        theme: ${{fromJson(needs.set-matrix.outputs.matrix)}}
        mode: [ default ]

    steps:
      #Build Devextreme latest
    - name: Checkout Devextreme
      uses: actions/checkout@v3
      with:
        repository: 'GoodDayForSurf/DevExtreme'
        path: 'devextreme'

    - name: DevExtreme - Restore npm cache
      uses: actions/cache@v3
      with:
        path: 'devextreme/**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('devextreme/**/package-lock.json') }}

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18.16.1'

    - name: DevExtreme - Install packages
      working-directory: devextreme
      run: npm install --no-audit --no-fund

    - name: DevExtreme - Build
      working-directory: devextreme/packages/devextreme
      run: npm run build-npm-devextreme

    - name: DevExtreme - Pack
      working-directory: devextreme/packages/devextreme/artifacts/npm/devextreme
      run: npm pack

    - name: DevExtreme dist - Pack
      working-directory: devextreme/packages/devextreme/artifacts/npm/devextreme-dist
      run: npm pack

      #Build UI Template Gallery
    - name: Get sources
      uses: actions/checkout@v3
      with:
        path: 'uitg'

    - name: Test 01
      run: ls .

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Set NPM version
      run: npm i npm@7 -g

    - name: Restore npm cache
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Run npm install
      working-directory: uitg
      run: npm install

    - name: Test 4
      run: ls .

    - name: Test 5
      run: ls ../

    - name: Test 6
      run: ls ../../

    - name: Test 7
      run: ls ../../..

    - name: Install latest devextreme for Angular
      working-directory: uitg/packages/angular
      run: npm install $(find ../../../devextreme/packages/devextreme/artifacts/npm/devextreme/ -maxdepth 1 -name "devextreme-*.tgz")

    - name: Install latest devextreme-dist for Angular
      working-directory: uitg/packages/angular
      run: npm install $(find ../../../devextreme/packages/devextreme/artifacts/npm/devextreme-dist/ -maxdepth 1 -name "devextreme-*.tgz")

    - name: Fix devextreme for Angular
      working-directory: uitg/packages/angular
      run: cp -r ../../../devextreme/packages/devextreme/artifacts/npm/devextreme/scss/bundles ./node_modules/devextreme/scss/

    - name: Set theme
      working-directory: uitg
      run: npm run set-theme -- ${{ matrix.theme }}

    - name: Set embedded mode
      working-directory: uitg
      if: ${{ matrix.mode == 'embedded' }}
      run: npm run make-embedded-mode

    - name: Build
      working-directory: uitg
      run: npm run build

    - name: Copy apps
      working-directory: uitg
      run: npm run copy-build -- ${{ matrix.mode }} ${{ matrix.theme }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: devextreme-ui-template-gallery-with-fluent/

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Get sources
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: devextreme-ui-template-gallery-with-fluent

    - name: Deploy in gh-pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: devextreme-ui-template-gallery-with-fluent
        target-folder: .

